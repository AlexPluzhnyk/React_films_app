{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/reactModul/React_films_app/src/routes/favorites/Favorites.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../components/_shared/card/Card\";\nimport { IMAGE_PATH } from \"../../constants/constants\";\nimport { removeFavoriteFilm } from \"../../store/films/actions\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FavoriteFilmsPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    favoriteFilms\n  } = useSelector(_ref => {\n    let {\n      filmsReducer: {\n        favoriteFilms\n      }\n    } = _ref;\n    return {\n      favoriteFilms\n    };\n  });\n\n  const removeFilm = film => {\n    dispatch(removeFavoriteFilm(film));\n  };\n\n  const renderCard = () => {\n    const isLiked = id => favoriteFilms.some(elem => {\n      return elem.id === id;\n    });\n\n    return favoriteFilms.map(item => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        film: item,\n        image_path: IMAGE_PATH,\n        addTooFavorite: removeFilm,\n        isFavorite: isLiked(item.id)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const listIsClear = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listIsClear\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"List is clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"favorite-wrapper\",\n    children: favoriteFilms.length > 0 ? renderCard() : listIsClear()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FavoriteFilmsPage, \"GAs8hB3FW3Lf9B9CrfJumC5MYm8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FavoriteFilmsPage;\nexport default FavoriteFilmsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteFilmsPage\");","map":{"version":3,"sources":["/Users/alex/Documents/reactModul/React_films_app/src/routes/favorites/Favorites.jsx"],"names":["React","useDispatch","useSelector","Card","IMAGE_PATH","removeFavoriteFilm","FavoriteFilmsPage","dispatch","favoriteFilms","filmsReducer","removeFilm","film","renderCard","isLiked","id","some","elem","map","item","listIsClear","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AAEA,OAAO,cAAP;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAoBN,WAAW,CACnC;AAAA,QAAC;AAAEO,MAAAA,YAAY,EAAE;AAAED,QAAAA;AAAF;AAAhB,KAAD;AAAA,WAA0C;AAAEA,MAAAA;AAAF,KAA1C;AAAA,GADmC,CAArC;;AAIA,QAAME,UAAU,GAAIC,IAAD,IAAU;AAC3BJ,IAAAA,QAAQ,CAACF,kBAAkB,CAACM,IAAD,CAAnB,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAMC,OAAO,GAAIC,EAAD,IACdN,aAAa,CAACO,IAAd,CAAoBC,IAAD,IAAU;AAC3B,aAAOA,IAAI,CAACF,EAAL,KAAYA,EAAnB;AACD,KAFD,CADF;;AAKA,WAAON,aAAa,CAACS,GAAd,CAAmBC,IAAD,IAAU;AACjC,0BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAGE,QAAA,UAAU,EAAEd,UAHd;AAIE,QAAA,cAAc,EAAEM,UAJlB;AAKE,QAAA,UAAU,EAAEG,OAAO,CAACK,IAAI,CAACJ,EAAN;AALrB,SAEOI,IAAI,CAACJ,EAFZ;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVM,CAAP;AAWD,GAjBD;;AAmBA,QAAMK,WAAW,GAAG,MAAM;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cACGX,aAAa,CAACY,MAAd,GAAuB,CAAvB,GAA2BR,UAAU,EAArC,GAA0CO,WAAW;AADxD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1CD;;GAAMb,iB;UACaL,W,EACSC,W;;;KAFtBI,iB;AA4CN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Card from \"../../components/_shared/card/Card\";\nimport { IMAGE_PATH } from \"../../constants/constants\";\nimport { removeFavoriteFilm } from \"../../store/films/actions\";\n\nimport \"./style.scss\";\n\nconst FavoriteFilmsPage = () => {\n  const dispatch = useDispatch();\n  const { favoriteFilms } = useSelector(\n    ({ filmsReducer: { favoriteFilms } }) => ({ favoriteFilms })\n  );\n\n  const removeFilm = (film) => {\n    dispatch(removeFavoriteFilm(film));\n  };\n\n  const renderCard = () => {\n    const isLiked = (id) =>\n      favoriteFilms.some((elem) => {\n        return elem.id === id;\n      });\n\n    return favoriteFilms.map((item) => {\n      return (\n        <Card\n          film={item}\n          key={item.id}\n          image_path={IMAGE_PATH}\n          addTooFavorite={removeFilm}\n          isFavorite={isLiked(item.id)}\n        />\n      );\n    });\n  };\n\n  const listIsClear = () => {\n    return (\n      <div className=\"listIsClear\">\n        <span className=\"text\">List is clear</span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"favorite-wrapper\">\n      {favoriteFilms.length > 0 ? renderCard() : listIsClear()}\n    </div>\n  );\n};\n\nexport default FavoriteFilmsPage;\n"]},"metadata":{},"sourceType":"module"}