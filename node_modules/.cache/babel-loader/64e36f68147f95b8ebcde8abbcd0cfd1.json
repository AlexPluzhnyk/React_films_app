{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/reactModul/React_films_app/src/routes/loginPage/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport { TextField, Button } from \"@mui/material\";\nimport { validationSchema } from \"./utils\";\nimport \"./style.scss\";\n/*\n  Login and password to enter\n {\n    login: \"admin@gmail.com\",\n    password: \"123456789\",\n  },\n  {\n    login: \"eva@gmail.com\",\n    password: \"123456789\",\n  },\n  {\n    login: \"ivan@gmail.com\",\n    password: \"123456789\",\n  },\n  {\n    login: \"lisa@gmail.com\",\n    password: \"123456789\",\n  },\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const {\n    users\n  } = useSelector(_ref2 => {\n    let {\n      filmsReducer: {\n        users\n      }\n    } = _ref2;\n    return {\n      users\n    };\n  });\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    handleChange\n  } = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const isAllowedToEntry = users.some(_ref3 => {\n        let {\n          login,\n          password\n        } = _ref3;\n        return login === values.email && password === values.password;\n      });\n\n      if (isAllowedToEntry) {\n        localStorage.setItem(\"current\", JSON.stringify(values));\n        history.push(\"/films\");\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-box\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: values.email,\n        onChange: handleChange,\n        error: touched.email && Boolean(errors.email),\n        helperText: touched.email && errors.email,\n        className: \"form-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        value: values.password,\n        onChange: handleChange,\n        error: touched.password && Boolean(errors.password),\n        helperText: touched.password && errors.password,\n        className: \"form-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"syVZlOMu6EzU5VqQKvzb8o0yQ58=\", false, function () {\n  return [useSelector, useFormik];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/alex/Documents/reactModul/React_films_app/src/routes/loginPage/LoginPage.jsx"],"names":["React","useSelector","useFormik","TextField","Button","validationSchema","LoginPage","history","users","filmsReducer","values","errors","touched","handleSubmit","handleChange","initialValues","email","password","onSubmit","isAllowedToEntry","some","login","localStorage","setItem","JSON","stringify","push","Boolean"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { useFormik } from \"formik\";\nimport { TextField, Button } from \"@mui/material\";\nimport { validationSchema } from \"./utils\";\n\nimport \"./style.scss\";\n\n/*\n  Login and password to enter\n {\n    login: \"admin@gmail.com\",\n    password: \"123456789\",\n  },\n  {\n    login: \"eva@gmail.com\",\n    password: \"123456789\",\n  },\n  {\n    login: \"ivan@gmail.com\",\n    password: \"123456789\",\n  },\n  {\n    login: \"lisa@gmail.com\",\n    password: \"123456789\",\n  },\n\n*/\n\nconst LoginPage = ({ history }) => {\n  const { users } = useSelector(({ filmsReducer: { users } }) => ({ users }));\n\n  const { values, errors, touched, handleSubmit, handleChange } = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n\n    validationSchema: validationSchema,\n\n    onSubmit: (values) => {\n      const isAllowedToEntry = users.some(({ login, password }) => {\n        return login === values.email && password === values.password;\n      });\n\n      if (isAllowedToEntry) {\n        localStorage.setItem(\"current\", JSON.stringify(values));\n        history.push(\"/films\");\n      }\n    },\n  });\n\n  return (\n    <div className=\"form-wrapper\">\n      <form className=\"form-box\" onSubmit={handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={values.email}\n          onChange={handleChange}\n          error={touched.email && Boolean(errors.email)}\n          helperText={touched.email && errors.email}\n          className=\"form-field\"\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={values.password}\n          onChange={handleChange}\n          error={touched.password && Boolean(errors.password)}\n          helperText={touched.password && errors.password}\n          className=\"form-field\"\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}