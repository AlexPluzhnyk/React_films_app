{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/reactModul/React_films_app/src/components/ActorsList/ActorsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { IMAGE_PATH } from \"../../constants/constants\";\nimport { fetchActors } from \"../../store/actors/action\";\nimport { CardActor } from \"../_shared/cardActor/CardActor\";\nimport Search from \"../_shared/search/Search\";\nimport Pagination from \"../_shared/pagination/Pagination\";\nimport { setQueryWord, searchActorFromQuery, changePage } from \"../../store/actors/action.js\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActorsList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchActors());\n  }, [dispatch]);\n  const {\n    allActors,\n    queryWord,\n    totalPages,\n    page\n  } = useSelector(_ref => {\n    let {\n      actorsReducer: {\n        allActors,\n        queryWord,\n        totalPages,\n        page\n      }\n    } = _ref;\n    return {\n      allActors,\n      queryWord,\n      totalPages,\n      page\n    };\n  });\n\n  const renderCardActor = () => {\n    return allActors.map(_ref2 => {\n      let {\n        name,\n        profile_path,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(CardActor, {\n        name: name,\n        posterLink: profile_path,\n        pathImg: IMAGE_PATH,\n        id: id\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const handleSearchChange = value => {\n    dispatch(setQueryWord(value));\n  };\n\n  const handleSearch = () => {\n    if (queryWord) {\n      dispatch(searchActorFromQuery(queryWord));\n      return;\n    }\n\n    dispatch(changePage(1));\n    dispatch(fetchActors());\n  };\n\n  const handleChangePage = page => {\n    dispatch(changePage(page));\n\n    if (queryWord) {\n      dispatch(searchActorFromQuery(queryWord));\n      return;\n    }\n\n    dispatch(fetchActors());\n  };\n\n  const renderNotFound = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NotFound\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderPagination = () => {\n    return /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: page,\n      totalPages: totalPages,\n      handleChange: handleChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleChange: handleSearchChange,\n      value: queryWord,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-wrapper\",\n      children: allActors.length > 0 ? renderCardActor() : renderNotFound()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), totalPages > 1 && renderPagination()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActorsList, \"0h/PrnL0COGXgEF6ifQw9roRJBw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ActorsList;\nexport default ActorsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActorsList\");","map":{"version":3,"sources":["/Users/alex/Documents/reactModul/React_films_app/src/components/ActorsList/ActorsList.jsx"],"names":["React","useEffect","useSelector","useDispatch","IMAGE_PATH","fetchActors","CardActor","Search","Pagination","setQueryWord","searchActorFromQuery","changePage","ActorsList","dispatch","allActors","queryWord","totalPages","page","actorsReducer","renderCardActor","map","name","profile_path","id","handleSearchChange","value","handleSearch","handleChangePage","renderNotFound","renderPagination","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { IMAGE_PATH } from \"../../constants/constants\";\nimport { fetchActors } from \"../../store/actors/action\";\nimport { CardActor } from \"../_shared/cardActor/CardActor\";\nimport Search from \"../_shared/search/Search\";\nimport Pagination from \"../_shared/pagination/Pagination\";\nimport {\n  setQueryWord,\n  searchActorFromQuery,\n  changePage,\n} from \"../../store/actors/action.js\";\n\nimport \"./style.scss\";\n\nconst ActorsList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchActors());\n  }, [dispatch]);\n\n  const { allActors, queryWord, totalPages, page } = useSelector(\n    ({ actorsReducer: { allActors, queryWord, totalPages, page } }) => ({\n      allActors,\n      queryWord,\n      totalPages,\n      page,\n    })\n  );\n  const renderCardActor = () => {\n    return allActors.map(({ name, profile_path, id }) => {\n      return (\n        <CardActor\n          key={id}\n          name={name}\n          posterLink={profile_path}\n          pathImg={IMAGE_PATH}\n          id={id}\n        />\n      );\n    });\n  };\n  const handleSearchChange = (value) => {\n    dispatch(setQueryWord(value));\n  };\n\n  const handleSearch = () => {\n    if (queryWord) {\n      dispatch(searchActorFromQuery(queryWord));\n      return;\n    }\n    dispatch(changePage(1));\n    dispatch(fetchActors());\n  };\n\n  const handleChangePage = (page) => {\n    dispatch(changePage(page));\n    if (queryWord) {\n      dispatch(searchActorFromQuery(queryWord));\n      return;\n    }\n    dispatch(fetchActors());\n  };\n  const renderNotFound = () => {\n    return (\n      <div className=\"NotFound\">\n        <h1>Not found</h1>\n      </div>\n    );\n  };\n  const renderPagination = () => {\n    return (\n      <Pagination\n        currentPage={page}\n        totalPages={totalPages}\n        handleChange={handleChangePage}\n      />\n    );\n  };\n\n  return (\n    <section>\n      <Search\n        handleChange={handleSearchChange}\n        value={queryWord}\n        onSearch={handleSearch}\n      />\n      <div className=\"list-wrapper\">\n        {allActors.length > 0 ? renderCardActor() : renderNotFound()}\n      </div>\n      {totalPages > 1 && renderPagination()}\n    </section>\n  );\n};\n\nexport default ActorsList;\n"]},"metadata":{},"sourceType":"module"}