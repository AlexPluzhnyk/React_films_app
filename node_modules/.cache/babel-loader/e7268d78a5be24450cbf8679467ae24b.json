{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/reactModul/React_films_app/src/components/DetailActorView/DetailActorView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport Card from \"../_shared/card/Card\";\nimport { IMAGE_PATH300x450, IMAGE_PATH } from \"../../constants/constants\";\nimport { fetchActorAbout } from \"../../store/actors/action\";\nimport { toggleFavoriteFilm } from \"../../store/films/actions\";\nimport notImage from \"../../images/placeholder.png\";\nimport \"./style.scss\";\n/*\nThis component works until the page is reloaded,\nthe API does not return the necessary information for famous films\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailActorView = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    actorId\n  } = useParams();\n  useEffect(() => {\n    dispatch(fetchActorAbout(actorId));\n  }, [dispatch, actorId]);\n  const {\n    allActors,\n    profile_path,\n    name,\n    biography,\n    birthday,\n    place_of_birth,\n    favoriteFilms\n  } = useSelector(_ref => {\n    let {\n      filmsReducer: {\n        favoriteFilms\n      },\n      actorsReducer: {\n        allActors,\n        actorDescription: {\n          profile_path,\n          name,\n          biography,\n          birthday,\n          place_of_birth,\n          id\n        }\n      }\n    } = _ref;\n    return {\n      profile_path,\n      name,\n      biography,\n      birthday,\n      place_of_birth,\n      id,\n      allActors,\n      favoriteFilms\n    };\n  });\n  const {\n    known_for\n  } = allActors.find(_ref2 => {\n    let {\n      id\n    } = _ref2;\n    return id === +actorId;\n  });\n\n  const isLiked = id => favoriteFilms.some(elem => {\n    return elem.id === id;\n  });\n\n  const addTooFavorite = film => {\n    dispatch(toggleFavoriteFilm(film));\n  };\n\n  const renderKnownForCard = () => {\n    return known_for.map(item => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        film: item,\n        image_path: IMAGE_PATH,\n        addTooFavorite: addTooFavorite,\n        isFavorite: isLiked(item.id)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about__box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about__poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"about__img\",\n          src: profile_path ? `${IMAGE_PATH300x450}${profile_path}` : notImage,\n          alt: \"poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Birthday: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), birthday]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Place of birth: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), place_of_birth]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Biography\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: biography\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fameTitle\",\n      children: \"Known for\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-famous\",\n      children: renderKnownForCard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DetailActorView, \"L6GsDuXU4b8WWX0gTCUX9B4BUHY=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = DetailActorView;\nexport default DetailActorView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailActorView\");","map":{"version":3,"sources":["/Users/alex/Documents/reactModul/React_films_app/src/components/DetailActorView/DetailActorView.jsx"],"names":["React","useEffect","useDispatch","useSelector","useParams","Card","IMAGE_PATH300x450","IMAGE_PATH","fetchActorAbout","toggleFavoriteFilm","notImage","DetailActorView","dispatch","actorId","allActors","profile_path","name","biography","birthday","place_of_birth","favoriteFilms","filmsReducer","actorsReducer","actorDescription","id","known_for","find","isLiked","some","elem","addTooFavorite","film","renderKnownForCard","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\n\nimport Card from \"../_shared/card/Card\";\nimport { IMAGE_PATH300x450, IMAGE_PATH } from \"../../constants/constants\";\nimport { fetchActorAbout } from \"../../store/actors/action\";\nimport { toggleFavoriteFilm } from \"../../store/films/actions\";\nimport notImage from \"../../images/placeholder.png\";\n\nimport \"./style.scss\";\n\n/*\nThis component works until the page is reloaded,\nthe API does not return the necessary information for famous films\n*/\n\nconst DetailActorView = () => {\n  const dispatch = useDispatch();\n  const { actorId } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchActorAbout(actorId));\n  }, [dispatch, actorId]);\n\n  const {\n    allActors,\n    profile_path,\n    name,\n    biography,\n    birthday,\n    place_of_birth,\n    favoriteFilms,\n  } = useSelector(\n    ({\n      filmsReducer: { favoriteFilms },\n      actorsReducer: {\n        allActors,\n        actorDescription: {\n          profile_path,\n          name,\n          biography,\n          birthday,\n          place_of_birth,\n          id,\n        },\n      },\n    }) => ({\n      profile_path,\n      name,\n      biography,\n      birthday,\n      place_of_birth,\n      id,\n      allActors,\n      favoriteFilms,\n    })\n  );\n\n  const { known_for } = allActors.find(({ id }) => id === +actorId);\n\n  const isLiked = (id) =>\n    favoriteFilms.some((elem) => {\n      return elem.id === id;\n    });\n\n  const addTooFavorite = (film) => {\n    dispatch(toggleFavoriteFilm(film));\n  };\n\n  const renderKnownForCard = () => {\n    return known_for.map((item) => {\n      return (\n        <Card\n          key={item.id}\n          film={item}\n          image_path={IMAGE_PATH}\n          addTooFavorite={addTooFavorite}\n          isFavorite={isLiked(item.id)}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"about\">\n      <div className=\"about__box\">\n        <div className=\"about__poster\">\n          <img\n            className=\"about__img\"\n            src={\n              profile_path ? `${IMAGE_PATH300x450}${profile_path}` : notImage\n            }\n            alt=\"poster\"\n          />\n        </div>\n        <div className=\"description\">\n          <h2>{name}</h2>\n          <p>\n            <strong>Birthday: </strong>\n            {birthday}\n          </p>\n          <p>\n            <strong>Place of birth: </strong>\n            {place_of_birth}\n          </p>\n          <h3>Biography</h3>\n          <p>{biography}</p>\n        </div>\n      </div>\n      <h1 className=\"fameTitle\">Known for</h1>\n      <div className=\"box-famous\">{renderKnownForCard()}</div>\n    </div>\n  );\n};\n\nexport default DetailActorView;\n"]},"metadata":{},"sourceType":"module"}