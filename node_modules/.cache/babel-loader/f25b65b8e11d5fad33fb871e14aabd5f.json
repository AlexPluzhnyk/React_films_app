{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/reactModul/React_films_app/src/components/FilmList/FilmList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IMAGE_PATH } from \"../../constants/constants\";\nimport { toggleFavoriteFilm, fetchFilms, setFilter } from \"../../store/films/actions\";\nimport { FILTER_NAMES } from \"../../store/films/constants\";\nimport Card from \"../_shared/card/Card\";\nimport MyPagination from \"../_shared/pagination/Pagination\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilmList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchFilms());\n  }, [dispatch]);\n  const {\n    films,\n    totalPages,\n    page,\n    favoriteFilms\n  } = useSelector(_ref => {\n    let {\n      filmsReducer: {\n        films,\n        totalPages,\n        favoriteFilms,\n        appliedFilters: {\n          page\n        }\n      }\n    } = _ref;\n    return {\n      films,\n      totalPages,\n      page,\n      favoriteFilms\n    };\n  });\n\n  const handleChange = value => {\n    dispatch(setFilter(FILTER_NAMES.PAGE, value));\n    dispatch(fetchFilms());\n  };\n\n  const addTooFavorite = film => {\n    dispatch(toggleFavoriteFilm(film));\n  };\n\n  const renderFilmCard = () => {\n    const isLiked = id => favoriteFilms.some(elem => {\n      return elem.id === id;\n    });\n\n    return films.map(film => /*#__PURE__*/_jsxDEV(Card, {\n      film: film,\n      addTooFavorite: addTooFavorite,\n      isFavorite: isLiked(film.id),\n      image_path: IMAGE_PATH\n    }, film.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this));\n  };\n\n  const renderPagination = () => {\n    return /*#__PURE__*/_jsxDEV(MyPagination, {\n      currentPage: page,\n      handleChange: handleChange,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderNotFound = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NotFound\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"films-wrapper\",\n      children: films.length > 0 ? renderFilmCard() : renderNotFound()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), totalPages > 1 && renderPagination()]\n  }, void 0, true);\n};\n\n_s(FilmList, \"8xNELI94hOu0hAKhX4pM3rJQFYc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FilmList;\nexport default FilmList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmList\");","map":{"version":3,"sources":["/Users/alex/Documents/reactModul/React_films_app/src/components/FilmList/FilmList.jsx"],"names":["React","useEffect","useDispatch","useSelector","IMAGE_PATH","toggleFavoriteFilm","fetchFilms","setFilter","FILTER_NAMES","Card","MyPagination","FilmList","dispatch","films","totalPages","page","favoriteFilms","filmsReducer","appliedFilters","handleChange","value","PAGE","addTooFavorite","film","renderFilmCard","isLiked","id","some","elem","map","renderPagination","renderNotFound","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { IMAGE_PATH } from \"../../constants/constants\";\nimport {\n  toggleFavoriteFilm,\n  fetchFilms,\n  setFilter,\n} from \"../../store/films/actions\";\nimport { FILTER_NAMES } from \"../../store/films/constants\";\nimport Card from \"../_shared/card/Card\";\nimport MyPagination from \"../_shared/pagination/Pagination\";\n\nimport \"./style.scss\";\n\nconst FilmList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchFilms());\n  }, [dispatch]);\n\n  const { films, totalPages, page, favoriteFilms } = useSelector(\n    ({\n      filmsReducer: {\n        films,\n        totalPages,\n        favoriteFilms,\n        appliedFilters: { page },\n      },\n    }) => ({ films, totalPages, page, favoriteFilms })\n  );\n\n  const handleChange = (value) => {\n    dispatch(setFilter(FILTER_NAMES.PAGE, value));\n    dispatch(fetchFilms());\n  };\n\n  const addTooFavorite = (film) => {\n    dispatch(toggleFavoriteFilm(film));\n  };\n\n  const renderFilmCard = () => {\n    const isLiked = (id) =>\n      favoriteFilms.some((elem) => {\n        return elem.id === id;\n      });\n\n    return films.map((film) => (\n      <Card\n        film={film}\n        key={film.id}\n        addTooFavorite={addTooFavorite}\n        isFavorite={isLiked(film.id)}\n        image_path={IMAGE_PATH}\n      />\n    ));\n  };\n  const renderPagination = () => {\n    return (\n      <MyPagination\n        currentPage={page}\n        handleChange={handleChange}\n        totalPages={totalPages}\n      />\n    );\n  };\n  const renderNotFound = () => {\n    return (\n      <div className=\"NotFound\">\n        <h1>Not found</h1>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"films-wrapper\">\n        {films.length > 0 ? renderFilmCard() : renderNotFound()}\n      </div>\n      {totalPages > 1 && renderPagination()}\n    </>\n  );\n};\n\nexport default FilmList;\n"]},"metadata":{},"sourceType":"module"}